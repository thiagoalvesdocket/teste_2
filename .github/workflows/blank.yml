name: Cria Override.yaml

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: write

jobs:
  generate-override:
    runs-on: ubuntu-latest
    environment: variaveis  # Garante que as vari치veis do Environment "variaveis" sejam carregadas
    steps:
      - name: Checkout do reposit칩rio
        uses: actions/checkout@v4

      - name: Exportar vari치veis do Environment
        run: |
          echo "Exportando vari치veis do Environment..."
          VAR_LIST=$(jq -r 'keys[]' <<< '${{ toJson(vars) }}')

          for VAR in $VAR_LIST; do
            VALUE="${{ vars[VAR] }}"
            echo "$VAR=$VALUE" >> $GITHUB_ENV
          done

      - name: Criar override.yaml dinamicamente
        run: |
          echo "secretProviderClass:" > override.yaml
          echo "  data:" >> override.yaml

          for var in $(printenv | cut -d= -f1); do
            echo "    - objectName: $var" >> override.yaml
            echo "      key: $var" >> override.yaml
          done

          echo "  parameters:" >> override.yaml
          echo "    objects: |" >> override.yaml

          for var in $(printenv | cut -d= -f1); do
            echo "      - objectName: \"/eks/docket-documento-ai/\${ENVIRONMENT}/$var\"" >> override.yaml
            echo "        objectAlias: $var" >> override.yaml
            echo "        objectType: \"ssmparameter\"" >> override.yaml
          done

          echo "env:" >> override.yaml

          for var in $(printenv | cut -d= -f1); do
            echo "  - name: $var" >> override.yaml
            echo "    valueFrom:" >> override.yaml
            echo "      secretKeyRef:" >> override.yaml
            echo "        name: docket-documento-ai-\${ENVIRONMENT}-keys" >> override.yaml
            echo "        key: $var" >> override.yaml
          done

      - name: Exibir override.yaml gerado
        run: cat override.yaml
